@model IEnumerable<Tienda.Models.Producto>

@{
    ViewBag.Title = "Tienda Virtual";
}

<body class="initial-bg-color">
    <main>
        <section class="row" aria-labelledby="aspnetTitle">
            <h1 id="title">Productos</h1>
            <p class="lead">Explora nuestros productos.</p>
            <p>Mostrando @ViewBag.ProductCount resultados</p>
            <div class="row">
                @foreach (var producto in Model)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card product-card narrow-card">
                            <!-- Envuelve solo la imagen y el título en enlaces -->
                            <a href="@Url.Action("Details", new { id = producto.Id })" class="text-decoration-none">
                                <img src="@producto.Imagen" class="card-img-top" alt="@producto.Nombre">
                            </a>
                            <div class="card-body">
                                <a href="@Url.Action("Details", new { id = producto.Id })" class="text-decoration-none text-success">
                                    <h5 class="card-title">@producto.Nombre</h5>
                                </a>
                                <p class="card-text">@producto.Descripcion</p>
                                <p class="card-text text-price">@producto.Precio.ToString("C")</p>
                            </div>
                            <div class="card-footer">
                                <button class="btn buy-now" data-product-id="@producto.Id">Comprar</button>
                                <button class="btn add-to-cart" data-product-id="@producto.Id">Añadir al carrito</button>
                                <span class="confirmation d-none" id="confirmation-@producto.Id">
                                    ✓
                                    <br>
                                    <span class="text-danger">El producto se agregó al carrito</span>
                                    <br>
                                    <a href="@Url.Action("Carrito", "Home")">Ver carrito</a>
                                </span>
                            </div>
                        </div>
                    </div>
                }
            </div>
            </div>
</body>

<script>
    // color fonde de los botones
    document.addEventListener('DOMContentLoaded', function () {
        // Obtener el color guardado desde localStorage
        var savedNavbarColor = localStorage.getItem('navbarColor');

        // Definir el color por defecto (gris)
        var colorToApply = savedNavbarColor || '#808080'; // Gris por defecto

        // Aplicar el color guardado o el color por defecto a los botones
        document.querySelectorAll('.add-to-cart, .buy-now').forEach(function (button) {
            button.style.backgroundColor = colorToApply;
        });
    });

    function updateCartItemCount() {
        fetch('/Home/GetCartItemCount')
            .then(response => response.json())
            .then(data => {
                var cartItemCount = data.itemCount;
                var cartCounterElement = document.querySelector('.cart-item-count');
                if (cartCounterElement) {
                    cartCounterElement.textContent = cartItemCount;
                } else {
                    // Crear el contador si no existe
                    var cartLink = document.querySelector('a[href="/Home/Carrito"]');
                    if (cartLink) {
                        var span = document.createElement('span');
                        span.classList.add('cart-item-count', 'badge', 'badge-danger');
                        span.textContent = cartItemCount;
                        cartLink.appendChild(span);
                    }
                }
            });
    }

    document.querySelectorAll('.add-to-cart').forEach(button => {
        button.addEventListener('click', function () {
            var productId = this.getAttribute('data-product-id');
            fetch('/Home/AddToCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId, quantity: 1 })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Actualizar el mensaje de confirmación
                    document.getElementById('confirmation-' + productId).classList.remove('d-none');

                    // Actualizar el contador del carrito
                    updateCartItemCount();
                }
            });
        });
    });

    function buyNow(productId) {
        fetch('/Home/AddToCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ productId: productId, quantity: 1 })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Redirigir al carrito de compras si la operación fue exitosa
                window.location.href = '@Url.Action("Carrito", "Home")';
            }
        });
    }

    document.querySelectorAll('.buy-now').forEach(button => {
        button.addEventListener('click', function () {
            var productId = this.getAttribute('data-product-id');
            buyNow(productId);
        });
    });

    // Llamar a updateCartItemCount cuando la página se cargue
    document.addEventListener('DOMContentLoaded', updateCartItemCount);
</script>

<style>
    .narrow-card {
        max-width: 330px;
    }

    .custom-color {
        color: rgb(255, 25, 84); /* Color personalizado para el nombre */
    }

    .black-text {
        color: #000000; /* Color negro para la descripción */
    }

    .card.product-card {
        box-shadow: 0 4px 8px 0 rgb(0,0,0,0.2); /* Sombreado */
        transition: 0.4s; /* Transición suave */
        width: 85%; /* Hacer la tarjeta más delgada */
        margin: auto; /* Centrar la tarjeta en el espacio de la columna */
    }

        .card.product-card:hover {
            box-shadow: 0 8px 16px 3px rgba(85, 130, 255); /* Sombreado más pronunciado al pasar el ratón */
        }
</style>
